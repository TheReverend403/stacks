version: "3.9"

services:
  netbox: &netbox
    image: netboxcommunity/netbox:latest
    container_name: netbox
    restart: unless-stopped
    user: ${PUID:-1000}:${PGID:-1000}
    depends_on:
      keydb:
        condition: service_healthy
    env_file: .env
    environment:
      SECRET_KEY: ${SECRET_KEY:?}
      MEDIA_ROOT: /opt/netbox/netbox/media
      REDIS_HOST: ${KEYDB_HOST:-keydb}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /run/postgresql:/run/postgresql
      - ${BASE_DIR:?}/config:/etc/netbox/config:ro
      - ${BASE_DIR:?}/data/media:/opt/netbox/netbox/media
      - ${BASE_DIR:?}/data/reports:/opt/netbox/netbox/reports
      - ${BASE_DIR:?}/data/scripts:/opt/netbox/netbox/scripts
      - ${BASE_DIR:?}/unit:/opt/unit
    networks:
      - netbox
      - caddy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/ || exit 1"]
      start_period: 10s
      start_interval: 1s
      interval: 10s
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: ${NETBOX_CPU_LIMIT:-${CPU_LIMIT:-0}}
          memory: ${NETBOX_MEM_LIMIT:-${MEM_LIMIT:-0}}

  netbox_rqworker:
    <<: *netbox
    container_name: netbox_rqworker
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    networks:
      - netbox
    healthcheck:
      test: ["CMD-SHELL", "ps -aux | grep -v grep | grep -q rqworker || exit 1"]
      start_period: 10s
      start_interval: 1s
      interval: 10s
      timeout: 5s

  netbox_housekeeping:
    <<: *netbox
    container_name: netbox_housekeeping
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/housekeeping.sh
    networks:
      - netbox
    healthcheck:
      test:
        ["CMD-SHELL", "ps -aux | grep -v grep | grep -q housekeeping || exit 1"]
      start_period: 10s
      start_interval: 1s
      interval: 10s
      timeout: 5s

  keydb:
    image: eqalpha/keydb:latest
    container_name: netbox_keydb
    command:
      - --dir /data
      - --appendonly yes
      - ${KEYDB_ARGS:-}
    restart: unless-stopped
    init: true
    user: ${PUID:-1000}:${PGID:-1000}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${BASE_DIR:?}/keydb/data:/data
    networks:
      - netbox
    healthcheck:
      test: ["CMD-SHELL", "keydb-cli ping | grep PONG"]
      start_period: 10s
      start_interval: 1s
      interval: 10s
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: ${KEYDB_CPU_LIMIT:-${CPU_LIMIT:-0}}
          memory: ${KEYDB_MEM_LIMIT:-${MEM_LIMIT:-0}}

networks:
  netbox:
    name: netbox
  caddy:
    external: true
